scalar JSON
scalar DateTime
scalar URL

type TelemetryError{
	message: String
	code: String
}

type Query {
	temperatureCelsius(hiveId: ID!, timeRangeMin: Int): [MetricFloat]
	humidityPercent(hiveId: ID!, timeRangeMin: Int): [MetricFloat]
	weightKg(hiveId: ID!, timeRangeMin: Int): [MetricFloat]
}

type MetricFloat {
	"""Timestamp of the metric. We use short-hand name to save bandwidth as it is a repeated metric"""
	t: DateTime!

	"""Float value of the metric. We use short-hand name to save bandwidth as it is a repeated metric"""
	v: Float
}

type Mutation {
	addMetric(
		hiveId: ID!
		fields: MetricSetInput!
	): AddMetricResult
}

type AddMetricMessage {
	message: String
}
union AddMetricResult = AddMetricMessage | TelemetryError

input MetricSetInput {
	temperatureCelsius: Float
	humidityPercent: Float
	weightKg: Float
}